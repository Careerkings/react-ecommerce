{"ast":null,"code":"/*import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signInFailure, signInPending, signInSuccess } from '../redux/userSlice'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Oauth from '../components/Oauth'\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({})\r\n    const { loading, error  } = useSelector(state => state.user)\r\n    const [postToStorage, setPostToStorage] = useState(false)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.id]: e.target.value})\r\n    }\r\n\r\n\r\n    useEffect( () => { \r\n    const handleUserFetch = async () => {\r\n            try {\r\n            dispatch(signInPending())\r\n            if(localStorage.getItem('userData')){\r\n                dispatch(signInSuccess(localStorage.getItem(JSON.parse('userData'))))\r\n                setPostToStorage(true)\r\n            }else if (!postToStorage){\r\n                const res = await fetch('http://localhost:5000/api/signup', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/Json'\r\n                    },\r\n                    body: JSON.stringify(formData)\r\n                });\r\n                if(userData.success === false) {\r\n                   dispatch(signInFailure(userData.message))\r\n                    return;\r\n                }\r\n                const userData = await res.json()\r\n                localStorage.setItem('userData', JSON.stringify(userData))\r\n                dispatch(signInSuccess(userData))\r\n                navigate('/')\r\n            }\r\n\r\n        } catch(err) {\r\n           dispatch(signInFailure(err.message))\r\n        }\r\n    }}, [postToStorage])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>sign in</h2>\r\n      <form>\r\n        <input type=\"email\" placeholder='email' id='email' onchange={handleChange}/>\r\n        <input type=\"password\" placeholder='password' id='password' onchange={handleChange}/>\r\n        <button onSubmit={handleUserFetch} disabled={loading}>{loading ? 'loading...' : 'signin'}</button>\r\n        <Oauth/>\r\n      </form>\r\n      <div>\r\n        <p>Dont have an account ?</p>\r\n        <Link to='/signup'>\r\n        <span>signup</span>\r\n        </Link>\r\n      </div>\r\n      <div>{error && <p>{error}</p>}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signin\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/Acer/Desktop/precious/ecommerce/src/pages/Signin.js"],"sourcesContent":["/*import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signInFailure, signInPending, signInSuccess } from '../redux/userSlice'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Oauth from '../components/Oauth'\r\n\r\nconst Signin = () => {\r\n    const [formData, setFormData] = useState({})\r\n    const { loading, error  } = useSelector(state => state.user)\r\n    const [postToStorage, setPostToStorage] = useState(false)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.id]: e.target.value})\r\n    }\r\n\r\n\r\n    useEffect( () => { \r\n    const handleUserFetch = async () => {\r\n            try {\r\n            dispatch(signInPending())\r\n            if(localStorage.getItem('userData')){\r\n                dispatch(signInSuccess(localStorage.getItem(JSON.parse('userData'))))\r\n                setPostToStorage(true)\r\n            }else if (!postToStorage){\r\n                const res = await fetch('http://localhost:5000/api/signup', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/Json'\r\n                    },\r\n                    body: JSON.stringify(formData)\r\n                });\r\n                if(userData.success === false) {\r\n                   dispatch(signInFailure(userData.message))\r\n                    return;\r\n                }\r\n                const userData = await res.json()\r\n                localStorage.setItem('userData', JSON.stringify(userData))\r\n                dispatch(signInSuccess(userData))\r\n                navigate('/')\r\n            }\r\n\r\n        } catch(err) {\r\n           dispatch(signInFailure(err.message))\r\n        }\r\n    }}, [postToStorage])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h2>sign in</h2>\r\n      <form>\r\n        <input type=\"email\" placeholder='email' id='email' onchange={handleChange}/>\r\n        <input type=\"password\" placeholder='password' id='password' onchange={handleChange}/>\r\n        <button onSubmit={handleUserFetch} disabled={loading}>{loading ? 'loading...' : 'signin'}</button>\r\n        <Oauth/>\r\n      </form>\r\n      <div>\r\n        <p>Dont have an account ?</p>\r\n        <Link to='/signup'>\r\n        <span>signup</span>\r\n        </Link>\r\n      </div>\r\n      <div>{error && <p>{error}</p>}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signin\r\n*/"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
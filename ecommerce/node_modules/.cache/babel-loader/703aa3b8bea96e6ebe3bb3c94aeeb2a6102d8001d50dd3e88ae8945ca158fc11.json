{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n  cartTotalQuantity: 0,\n  cartTotalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      if (itemIndex >= 0) {\n        state.cartItems[itemIndex].quantity++;\n      } else {\n        const temProducts = {\n          ...action.payload,\n          quantity: 1\n        };\n        state.cartItems.push(temProducts);\n      }\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    removeFromCart: (state, action) => {\n      const filteredItems = state.cartItems.filter(cartItems => cartItem.id !== action.payload.id);\n      state.cartItems = filteredItems;\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    decreaseCart: (state, action) => {\n      const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id);\n      if (state.cartItems[itemIndex].quantity > 1) {\n        state.cartItems[itemIndex].quantity--;\n      } else if (state.cartItems[itemIndex].quantity === 1) {\n        const filteredItems = state.cartItems.filter(cartItems => cartItem.id !== action.payload.id);\n        state.cartItems = filteredItems;\n      }\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    clearCart: (state, action) => {\n      state.cartItems = [];\n      localStorage.setItem('cartItems', JSON.stringify(state.cartItems));\n    },\n    getTotals: (state, action) => {\n      const {\n        quantity,\n        total\n      } = state.cartItems.reduce((cartTotal, cartItem) => {\n        const {\n          price,\n          quantity\n        } = cartItems;\n        const itemTotal = price * quantity;\n        cartTotal.total += itemTotal;\n        cartTotal.cartQuantity += itemtotal;\n        return cartTotal;\n      }, {\n        total: 0,\n        cartQuantity: 0\n      });\n      cartTotalQuantity = quantity;\n      cartTotalAmount = total;\n    }\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  decreaseCart,\n  getTotals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cartItems","localStorage","getItem","JSON","parse","cartTotalQuantity","cartTotalAmount","cartSlice","name","reducers","addToCart","state","action","itemIndex","findIndex","cartItem","id","payload","quantity","temProducts","push","setItem","stringify","removeFromCart","filteredItems","filter","decreaseCart","clearCart","getTotals","total","reduce","cartTotal","price","itemTotal","cartQuantity","itemtotal","actions","reducer"],"sources":["C:/Users/Acer/Desktop/precious/ecommerce/src/redux/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\r\n    cartTotalQuantity: 0,\r\n    cartTotalAmount: 0\r\n}\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState,\r\n    reducers: {\r\n        addToCart: (state, action) => {\r\n            const itemIndex = state.cartItems.findIndex((cartItem) => cartItem.id === action.payload.id);\r\n            if(itemIndex >= 0) {\r\n                state.cartItems[itemIndex].quantity++\r\n            }else {\r\n                const temProducts = {...action.payload, quantity: 1};\r\n                state.cartItems.push(temProducts);\r\n            }\r\n            localStorage.setItem('cartItems', JSON.stringify(state.cartItems))\r\n        },\r\n        removeFromCart: (state, action) => {\r\n            const filteredItems = state.cartItems.filter(cartItems => cartItem.id !== action.payload.id)\r\n            state.cartItems = filteredItems\r\n            localStorage.setItem('cartItems', JSON.stringify(state.cartItems))\r\n        },\r\n        decreaseCart: (state, action) => {\r\n            const itemIndex = state.cartItems.findIndex(cartItem => cartItem.id === action.payload.id)\r\n            if(state.cartItems[itemIndex].quantity > 1){\r\n                state.cartItems[itemIndex].quantity--\r\n            }else if(state.cartItems[itemIndex].quantity === 1){\r\n                const filteredItems = state.cartItems.filter(cartItems => cartItem.id !== action.payload.id)\r\n                state.cartItems = filteredItems\r\n            }\r\n            localStorage.setItem('cartItems', JSON.stringify(state.cartItems))\r\n        },\r\n        clearCart: (state, action) => {\r\n            state.cartItems = []\r\n            localStorage.setItem('cartItems', JSON.stringify(state.cartItems))\r\n        },\r\n        getTotals: (state, action) => {\r\n           const { quantity, total} = state.cartItems.reduce((cartTotal, cartItem) => {\r\n                const {price, quantity} = cartItems;\r\n                const itemTotal = price * quantity\r\n                \r\n                cartTotal.total += itemTotal;\r\n                cartTotal.cartQuantity += itemtotal;\r\n                return cartTotal\r\n            }, {\r\n                total: 0,\r\n                cartQuantity: 0\r\n                \r\n            })\r\n            cartTotalQuantity = quantity;\r\n            cartTotalAmount = total;\r\n        }\r\n\r\n    }\r\n\r\n})\r\n\r\n\r\nexport const {addToCart, removeFromCart, decreaseCart, getTotals} = cartSlice.actions\r\n\r\nexport default cartSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\precious\\\\ecommerce\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productsFetchFailure, productsFetchPending, productsFetchSuccess } from '../redux/productSlice';\nimport { addToCart } from '../redux/cartSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const {\n    products,\n    loading,\n    error\n  } = useSelector(state => state.product);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch(productsFetchPending());\n        const res = await fetch('http://localhost:5000/products');\n        if (!res.ok) {\n          throw new Error('Products cannot be fetched');\n        }\n        const data = await res.json();\n        dispatch(productsFetchSuccess(data));\n      } catch (error) {\n        dispatch(productsFetchFailure(error.message));\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n  const handleClick = product => {\n    dispatch(addToCart(product));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: container,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products && products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: productContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: productImage,\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(product),\n          style: addToCartButton,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"laIeLZTnStuJlJMWEb7m+2wdPug=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Home;\nconst container = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center'\n};\nconst productContainer = {\n  border: '1px solid #ccc',\n  borderRadius: '5px',\n  padding: '10px',\n  margin: '10px',\n  textAlign: 'center'\n};\nconst productImage = {\n  height: '200px',\n  width: '300px'\n};\nconst addToCartButton = {\n  cursor: 'pointer',\n  backgroundColor: 'blue',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  padding: '8px',\n  marginTop: '10px'\n};\n\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productsFetchFailure, productsFetchPending, productsFetchSuccess } from '../redux/productSlice';\r\nimport { addToCart } from '../redux/cartSlice';\r\n\r\nconst Home = () => {\r\n    const { products, loading, error } = useSelector(state => state.product);\r\n    const dispatch = useDispatch();\r\n\r\n    // Add state to track whether data is being fetched from localStorage or backend\r\n    const [fetchingFromLocalStorage, setFetchingFromLocalStorage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                dispatch(productsFetchPending());\r\n\r\n            \r\n                localStorage.getItem('products') ?\r\n                dispatch(productsFetchSuccess(JSON.parse(localStorage.getItem('products'))));\r\n                setFetchingFromLocalStorage(true)\r\n                    \r\n\r\n                // Fetch products from backend only if not already fetched from localStorage\r\n                if (!fetchingFromLocalStorage) {\r\n                    const res = await fetch('http://localhost:5000/products');\r\n                    if (!res.ok) {\r\n                        throw new Error('Products cannot be fetched');\r\n                    }\r\n                    const data = await res.json();\r\n                    dispatch(productsFetchSuccess(data));\r\n\r\n                    // Store fetched products in localStorage\r\n                    localStorage.setItem('products', JSON.stringify(data));\r\n                }\r\n            } catch (error) {\r\n                dispatch(productsFetchFailure(error.message));\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [dispatch]); // Dependence on dispatch only\r\n\r\n    const handleClick = (product) => {\r\n        dispatch(addToCart(product));\r\n    };\r\n\r\n    return (\r\n        <div style={container}>\r\n            {error && <p>{error}</p>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div>\r\n                    {products && products.map(product => (\r\n                        <div key={product.id} style={productContainer}>\r\n                            <p>{product.name}</p>\r\n                            <p>{product.price}</p>\r\n                            <p>{product.desc}</p>\r\n                            <img style={productImage} src={product.image} alt={product.name} />\r\n                            <button onClick={() => handleClick(product)} style={addToCartButton}>Add to Cart</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst container = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n};\r\n\r\nconst productContainer = {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '10px',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst productImage = {\r\n    height: '200px',\r\n    width: '300px'\r\n};\r\n\r\nconst addToCartButton = {\r\n    cursor: 'pointer',\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    padding: '8px',\r\n    marginTop: '10px'\r\n};\r\n\r\n*/\n\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","productsFetchFailure","productsFetchPending","productsFetchSuccess","addToCart","jsxDEV","_jsxDEV","Home","_s","products","loading","error","state","product","dispatch","fetchData","res","fetch","ok","Error","data","json","message","handleClick","style","container","children","fileName","_jsxFileName","lineNumber","columnNumber","map","productContainer","name","price","desc","productImage","src","image","alt","onClick","addToCartButton","id","_c","display","flexDirection","alignItems","border","borderRadius","padding","margin","textAlign","height","width","cursor","backgroundColor","color","marginTop","$RefreshReg$"],"sources":["C:/Users/Acer/Desktop/precious/ecommerce/src/pages/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productsFetchFailure, productsFetchPending, productsFetchSuccess } from '../redux/productSlice';\r\nimport { addToCart } from '../redux/cartSlice';\r\n\r\nconst Home = () => {\r\n    const { products, loading, error } = useSelector(state => state.product);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                dispatch(productsFetchPending());\r\n                const res = await fetch('http://localhost:5000/products');\r\n                if (!res.ok) {\r\n                    throw new Error('Products cannot be fetched');\r\n                }\r\n                const data = await res.json();\r\n                dispatch(productsFetchSuccess(data));\r\n            } catch (error) {\r\n                dispatch(productsFetchFailure(error.message));\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [dispatch]);\r\n\r\n    const handleClick = (product) => {\r\n        dispatch(addToCart(product));\r\n    };\r\n\r\n    return (\r\n        <div style={container}>\r\n            {error && <p>{error}</p>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div>\r\n                    {products && products.map(product => (\r\n                        <div key={product.id} style={productContainer}>\r\n                            <p>{product.name}</p>\r\n                            <p>{product.price}</p>\r\n                            <p>{product.desc}</p>\r\n                            <img style={productImage} src={product.image} alt={product.name} />\r\n                            <button onClick={() => handleClick(product)} style={addToCartButton}>Add to Cart</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst container = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n};\r\n\r\nconst productContainer = {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '10px',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst productImage = {\r\n    height: '200px',\r\n    width: '300px'\r\n};\r\n\r\nconst addToCartButton = {\r\n    cursor: 'pointer',\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    padding: '8px',\r\n    marginTop: '10px'\r\n};\r\n\r\n\r\n/*\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { productsFetchFailure, productsFetchPending, productsFetchSuccess } from '../redux/productSlice';\r\nimport { addToCart } from '../redux/cartSlice';\r\n\r\nconst Home = () => {\r\n    const { products, loading, error } = useSelector(state => state.product);\r\n    const dispatch = useDispatch();\r\n\r\n    // Add state to track whether data is being fetched from localStorage or backend\r\n    const [fetchingFromLocalStorage, setFetchingFromLocalStorage] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                dispatch(productsFetchPending());\r\n\r\n            \r\n                localStorage.getItem('products') ?\r\n                dispatch(productsFetchSuccess(JSON.parse(localStorage.getItem('products'))));\r\n                setFetchingFromLocalStorage(true)\r\n                    \r\n\r\n                // Fetch products from backend only if not already fetched from localStorage\r\n                if (!fetchingFromLocalStorage) {\r\n                    const res = await fetch('http://localhost:5000/products');\r\n                    if (!res.ok) {\r\n                        throw new Error('Products cannot be fetched');\r\n                    }\r\n                    const data = await res.json();\r\n                    dispatch(productsFetchSuccess(data));\r\n\r\n                    // Store fetched products in localStorage\r\n                    localStorage.setItem('products', JSON.stringify(data));\r\n                }\r\n            } catch (error) {\r\n                dispatch(productsFetchFailure(error.message));\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [dispatch]); // Dependence on dispatch only\r\n\r\n    const handleClick = (product) => {\r\n        dispatch(addToCart(product));\r\n    };\r\n\r\n    return (\r\n        <div style={container}>\r\n            {error && <p>{error}</p>}\r\n            {loading ? (\r\n                <p>Loading...</p>\r\n            ) : (\r\n                <div>\r\n                    {products && products.map(product => (\r\n                        <div key={product.id} style={productContainer}>\r\n                            <p>{product.name}</p>\r\n                            <p>{product.price}</p>\r\n                            <p>{product.desc}</p>\r\n                            <img style={productImage} src={product.image} alt={product.name} />\r\n                            <button onClick={() => handleClick(product)} style={addToCartButton}>Add to Cart</button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst container = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center'\r\n};\r\n\r\nconst productContainer = {\r\n    border: '1px solid #ccc',\r\n    borderRadius: '5px',\r\n    padding: '10px',\r\n    margin: '10px',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst productImage = {\r\n    height: '200px',\r\n    width: '300px'\r\n};\r\n\r\nconst addToCartButton = {\r\n    cursor: 'pointer',\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    padding: '8px',\r\n    marginTop: '10px'\r\n};\r\n\r\n*/\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}